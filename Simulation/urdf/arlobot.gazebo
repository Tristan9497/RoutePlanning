<?xml version="1.0"?>
<robot>
  
  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>10</update_rate>      
        <ray>
          <scan>
            <horizontal>
           	  <!--samples based on 0.36degree angular res-->
              <samples>683</samples>
              <resolution>0.352</resolution>
              <!-- configured for 240 degree-->
              <min_angle>-2.094395102</min_angle>
              <max_angle>2.094395102</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>6</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
	          <type>gaussian</type>
	          <!-- Noise parameters based on published spec for Hokuyo laser
	               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
	               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
	               reading. -->
	          <mean>0.0</mean>
	          <stddev>0.01</stddev>
        	</noise>
      	</ray>
	    <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
			<topicName>laserscan</topicName>
			<frameName>hokuyo_link</frameName>
	    </plugin>
  	</sensor>
  </gazebo>
  
  
  !-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>1024</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
        <distortion>
        
        >/distortion>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>60</updateRate>
        <cameraName>Arlo_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.00295</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.30</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>30</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>chassis</robotBaseFrame>
    </plugin>
  </gazebo>
  
</robot>
  